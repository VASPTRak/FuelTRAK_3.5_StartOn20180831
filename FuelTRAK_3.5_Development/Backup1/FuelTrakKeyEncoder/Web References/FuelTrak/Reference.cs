//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3649
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3649.
// 
#pragma warning disable 1591

namespace FuelTrakKeyEncoder.FuelTrak {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="KeyEncoderServiceSoap", Namespace="http://trakeng.com/")]
    public partial class KeyEncoderService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonnelInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleKeyIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonnelKeyIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public KeyEncoderService() {
            this.Url = global::FuelTrakKeyEncoder.Properties.Settings.Default.FuelTrakKeyEncoder_KeyEncoderService_KeyEncoderService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event GetVehicleInformationCompletedEventHandler GetVehicleInformationCompleted;
        
        /// <remarks/>
        public event GetPersonnelInformationCompletedEventHandler GetPersonnelInformationCompleted;
        
        /// <remarks/>
        public event GetVehicleKeyIdCompletedEventHandler GetVehicleKeyIdCompleted;
        
        /// <remarks/>
        public event GetPersonnelKeyIdCompletedEventHandler GetPersonnelKeyIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trakeng.com/Ping", RequestNamespace="http://trakeng.com/", ResponseNamespace="http://trakeng.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trakeng.com/GetVehicleInformation", RequestNamespace="http://trakeng.com/", ResponseNamespace="http://trakeng.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VehicleInformation GetVehicleInformation(string vehicleId) {
            object[] results = this.Invoke("GetVehicleInformation", new object[] {
                        vehicleId});
            return ((VehicleInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleInformationAsync(string vehicleId) {
            this.GetVehicleInformationAsync(vehicleId, null);
        }
        
        /// <remarks/>
        public void GetVehicleInformationAsync(string vehicleId, object userState) {
            if ((this.GetVehicleInformationOperationCompleted == null)) {
                this.GetVehicleInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleInformationOperationCompleted);
            }
            this.InvokeAsync("GetVehicleInformation", new object[] {
                        vehicleId}, this.GetVehicleInformationOperationCompleted, userState);
        }
        
        private void OnGetVehicleInformationOperationCompleted(object arg) {
            if ((this.GetVehicleInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleInformationCompleted(this, new GetVehicleInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trakeng.com/GetPersonnelInformation", RequestNamespace="http://trakeng.com/", ResponseNamespace="http://trakeng.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PersonnelInformation GetPersonnelInformation(string personnelId) {
            object[] results = this.Invoke("GetPersonnelInformation", new object[] {
                        personnelId});
            return ((PersonnelInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonnelInformationAsync(string personnelId) {
            this.GetPersonnelInformationAsync(personnelId, null);
        }
        
        /// <remarks/>
        public void GetPersonnelInformationAsync(string personnelId, object userState) {
            if ((this.GetPersonnelInformationOperationCompleted == null)) {
                this.GetPersonnelInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonnelInformationOperationCompleted);
            }
            this.InvokeAsync("GetPersonnelInformation", new object[] {
                        personnelId}, this.GetPersonnelInformationOperationCompleted, userState);
        }
        
        private void OnGetPersonnelInformationOperationCompleted(object arg) {
            if ((this.GetPersonnelInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonnelInformationCompleted(this, new GetPersonnelInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trakeng.com/GetVehicleKeyId", RequestNamespace="http://trakeng.com/", ResponseNamespace="http://trakeng.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVehicleKeyId(string vehicleId) {
            object[] results = this.Invoke("GetVehicleKeyId", new object[] {
                        vehicleId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleKeyIdAsync(string vehicleId) {
            this.GetVehicleKeyIdAsync(vehicleId, null);
        }
        
        /// <remarks/>
        public void GetVehicleKeyIdAsync(string vehicleId, object userState) {
            if ((this.GetVehicleKeyIdOperationCompleted == null)) {
                this.GetVehicleKeyIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleKeyIdOperationCompleted);
            }
            this.InvokeAsync("GetVehicleKeyId", new object[] {
                        vehicleId}, this.GetVehicleKeyIdOperationCompleted, userState);
        }
        
        private void OnGetVehicleKeyIdOperationCompleted(object arg) {
            if ((this.GetVehicleKeyIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleKeyIdCompleted(this, new GetVehicleKeyIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trakeng.com/GetPersonnelKeyId", RequestNamespace="http://trakeng.com/", ResponseNamespace="http://trakeng.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPersonnelKeyId(string personnelId) {
            object[] results = this.Invoke("GetPersonnelKeyId", new object[] {
                        personnelId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonnelKeyIdAsync(string personnelId) {
            this.GetPersonnelKeyIdAsync(personnelId, null);
        }
        
        /// <remarks/>
        public void GetPersonnelKeyIdAsync(string personnelId, object userState) {
            if ((this.GetPersonnelKeyIdOperationCompleted == null)) {
                this.GetPersonnelKeyIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonnelKeyIdOperationCompleted);
            }
            this.InvokeAsync("GetPersonnelKeyId", new object[] {
                        personnelId}, this.GetPersonnelKeyIdOperationCompleted, userState);
        }
        
        private void OnGetPersonnelKeyIdOperationCompleted(object arg) {
            if ((this.GetPersonnelKeyIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonnelKeyIdCompleted(this, new GetPersonnelKeyIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3650")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trakeng.com/")]
    public partial class VehicleInformation {
        
        private string idField;
        
        private string systemIdField;
        
        private string fuelLimitField;
        
        private bool isMasterField;
        
        private bool requireSecondKeyField;
        
        private bool mileageEntryRequiredField;
        
        private string fuelTypesField;
        
        private string mileageField;
        
        private string mileageWindowField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string SystemId {
            get {
                return this.systemIdField;
            }
            set {
                this.systemIdField = value;
            }
        }
        
        /// <remarks/>
        public string FuelLimit {
            get {
                return this.fuelLimitField;
            }
            set {
                this.fuelLimitField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMaster {
            get {
                return this.isMasterField;
            }
            set {
                this.isMasterField = value;
            }
        }
        
        /// <remarks/>
        public bool RequireSecondKey {
            get {
                return this.requireSecondKeyField;
            }
            set {
                this.requireSecondKeyField = value;
            }
        }
        
        /// <remarks/>
        public bool MileageEntryRequired {
            get {
                return this.mileageEntryRequiredField;
            }
            set {
                this.mileageEntryRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string FuelTypes {
            get {
                return this.fuelTypesField;
            }
            set {
                this.fuelTypesField = value;
            }
        }
        
        /// <remarks/>
        public string Mileage {
            get {
                return this.mileageField;
            }
            set {
                this.mileageField = value;
            }
        }
        
        /// <remarks/>
        public string MileageWindow {
            get {
                return this.mileageWindowField;
            }
            set {
                this.mileageWindowField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3650")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trakeng.com/")]
    public partial class PersonnelInformation {
        
        private string idField;
        
        private string systemIdField;
        
        private bool requireSecondKeyField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string SystemId {
            get {
                return this.systemIdField;
            }
            set {
                this.systemIdField = value;
            }
        }
        
        /// <remarks/>
        public bool RequireSecondKey {
            get {
                return this.requireSecondKeyField;
            }
            set {
                this.requireSecondKeyField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetVehicleInformationCompletedEventHandler(object sender, GetVehicleInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VehicleInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetPersonnelInformationCompletedEventHandler(object sender, GetPersonnelInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonnelInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonnelInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonnelInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonnelInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetVehicleKeyIdCompletedEventHandler(object sender, GetVehicleKeyIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleKeyIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleKeyIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetPersonnelKeyIdCompletedEventHandler(object sender, GetPersonnelKeyIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonnelKeyIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonnelKeyIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591